?curl
download.file("https://github.com/jasonong/List-of-US-States/blob/master/states.csv",
"data/states.csv")
source('~/.active-rstudio-document', echo=TRUE)
library(tidyverse)
states = read_csv("states.csv")
states = read_csv("data/states.csv")
states = read_csv("../data/states.csv")
states
download.file("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv",
"data/states.csv")
states = read_csv("../data/states.csv")
states
download.file("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv",
"data/states.csv")
states = read_csv("../data/states.csv")
download.file("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv",
"../data/states.csv")
states = read_csv("../data/states.csv")
states
states = read_csv("../data/states.csv")
states
all_states = read_csv("../data/AL.txt", col_names = c("state", "sex", "year", "name", "occurances"))
for (state in states$Abbreviation[2:]) {
all_states = read_csv("../data/AL.txt", col_names = c("state", "sex", "year", "name", "occurances"))
for (state in states$Abbreviation[2:end]) {
all_states = add_rows(all_states, read_csv(file.path("..", "data", paste0(state, ".txt"))))
}
all_states = read_csv("../data/AL.txt", col_names = c("state", "sex", "year", "name", "occurances"))
for (state in states$Abbreviation[2:-1]) {
all_states = add_rows(all_states, read_csv(file.path("..", "data", paste0(state, ".txt"))))
}
all_states = read_csv("../data/AL.txt", col_names = c("state", "sex", "year", "name", "occurances"))
for (state in states$Abbreviation[-1]) {
all_states = add_rows(all_states, read_csv(file.path("..", "data", paste0(state, ".txt"))))
}
all_states = read_csv("../data/AL.txt", col_names = c("state", "sex", "year", "name", "occurances"))
for (state in states$Abbreviation[-1]) {
all_states = add_row(all_states, read_csv(file.path("..", "data", paste0(state, ".txt"))))
}
all_states = read_csv("../data/AL.txt", col_names = c("state", "sex", "year", "name", "occurances"))
for (state in states$Abbreviation[-1]) {
all_states = add_row(all_states, read_csv(file.path("..", "data", paste0(state, ".txt")),
col_names = c("state", "sex", "year", "name", "occurances")))
}
all_states = read_csv("../data/AL.txt", col_names = c("state", "sex", "year", "name", "occurances"))
for (state in states$Abbreviation[-1]) {
all_states = rbind(all_states, read_csv(file.path("..", "data", paste0(state, ".txt")),
col_names = c("state", "sex", "year", "name", "occurances")))
}
load_state_data = function (state) {
read_csv(
file.path("..", "data", paste0(state, ".txt")),
col_names = c("state", "sex", "year", "name", "occurances")
)
}
load_state_data("AL")
load_state_data = function (state) {
read_csv(
file.path("..", "data", paste0(state, ".txt")),
col_names = c("state", "sex", "year", "name", "occurances")
)
}
load_state_data("AL")
knitr::opts_chunk
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
library(tidyverse)
download.file("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv",
"../data/states.csv")
states = read_csv("../data/states.csv")
states
load_state_data = function (state) {
read_csv(
file.path("..", "data", paste0(state, ".txt")),
col_names = c("state", "sex", "year", "name", "occurances")
)
}
load_state_data("AL")
library(tidyverse)
download.file("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv",
"../data/states.csv")
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
}
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
}
concatenate_tables(
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
rbind(state_abbrevs[1], state_abbrevs[-1])
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
bind_rows(state_abbrevs[1], state_abbrevs[-1])
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
bind_rows(state_abbrevs)
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
bind_rows(list(state_abbrevs))
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
tables[1]
}
concatenate_tables()
load_state_data = function (state) {
read_csv(
file.path("..", "data", paste0(state, ".txt")),
col_names = c("state", "sex", "year", "name", "occurances"),
col_types = cols(sex = col_character())
)
}
load_state_data("AL")
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
tables[1]
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
rbind(tables)
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
tables
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
bind_rows(tables)
}
concatenate_tables()
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
bind_rows(tables)
}
concatenated = concatenate_tables()
library(tidyverse)
download.file("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv",
"../data/states.csv")
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
states = read_csv("../data/states.csv")
states
load_state_data = function (state) {
read_csv(
file.path("..", "data", paste0(state, ".txt")),
col_names = c("state", "sex", "year", "name", "occurances"),
col_types = cols(sex = col_character())
)
}
load_state_data("AL")
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
bind_rows(tables)
}
concatenated = concatenate_tables()
write_csv(
concatenated,
file.path("..", "data", "all-states.csv")
)
source('~/GitHub/baby-names/utils/export.R')
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
bind_rows(tables)
}
concatenated = concatenate_tables()
# print("Num Observation")
head(concatenated)
concatenate_tables = function () {
state_abbrevs = states$Abbreviation
tables = lapply(state_abbrevs, load_state_data)
bind_rows(tables)
}
concatenated = concatenate_tables()
# print("Num Observation")
concatenated
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x = "01-etc.Rmd"
x
split(x, "\\.Rmd")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
strsplit(x, "\\.")
strsplit(x, "\\.")[1]
strsplit(x, "\\.")[1][1]
strsplit(x, "\\.")[[1]]
strsplit(x, "\\.")[[1]][1]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x
strsplit(x, "-")
strsplit(x, "[-\\.]")
strsplit(x, "[-\\.]")[[1]]
strsplit(x, "[-\\.]")[[1]][1]
source('~/.active-rstudio-document')
toupper("hello")
tools::toTitleCase("hello")
toTitleCase
toTitleCase("hello")
tools::toTitleCase(["hello", "friend"])
paste(["hello", "friend"])
paste(c("hello", "friend")
paste(c("hello", "friend"))
tools::toTitleCase(c("hello", "friend"))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
getwd()
source('~/GitHub/baby-names/utils/generate-menu.R')
getwd()
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
noteboos
notebooks
strsplit(notebooks, "[-\\.]")[[1]]
pieces = strsplit(notebooks, "[-\\.]")[[1]]
pieces
pieces[-1]
pieces[1c(1, length(pieces))]
pieces[-c(1, length(pieces))]
paste(pieces[-c(1, length(pieces))])
paste(pieces[-c(1, length(pieces))], step=" ")
class(pieces)
unlist(pieces)
pieces
paste(unlist(pieces[-c(1, length(pieces))]))
pieces = [-c(1, length(pieces))]
pieces = pieces[-c(1, length(pieces))]
pieces
toString(pieces)
toString(pieces, sep = " ")
paste(pieces)
paste(unlist(pieces))
as.character(pieces)
paste(as.character(pieces))
paste(pieces, collapse="")
paste(pieces, collapse=" ")
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
getwd()
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/generate-menu.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
source('~/GitHub/baby-names/utils/export.R')
